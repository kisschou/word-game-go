syntax = "proto3";
import "base.proto";

package BiuRpc.AdminApi;

//@module AdminApi 后台接口

//========================================
//@group Version 版本
//版本(Version) begin
//========================================

//版本信息
message Version {
    int32 id = 1; //ID
    string buildNum = 2; //内部版本号
    string version = 3; //外部版本号
    string platform = 4; //平台:1.IOS;2.Android
    string channel = 5; //渠道(为空不区分渠道)
    bool isForce = 6; //是否强制更新:0.否;1.是
    bool isReview = 7; //是否正在审核中(0.否;1.是)
    string url = 8; //下载链接
    string apiUrl = 9; //接口连接
    string uploadUrl = 10; //上传连接
    string desc = 11; //更新说明(对外)
    string content = 12; //更新内容
    int32 status = 13; //状态:0.禁用;1.正常
    string operatorName = 14; //操作人
    string createTime = 15; //添加时间
}

//@desc 获取版本列表
//@class Version
//@method GetVersionList
//请求服务端
message RequestVersionGetVersionList {
    BiuRpc.Base.Request base = 1;
    int32 page = 2; //页码(从1开始)
    int32 pageSize = 3; //页长(默认为10)
    string buildNum = 4; //内部版本号
    string version = 5; //外部版本号
}

// 返回客户端
message ResponseVersionGetVersionList {
    BiuRpc.Base.Response base = 1;
    repeated Version versionList = 2; //版本列表
    int32 total = 3; //总数量
}

//@desc 获取版本详情
//@class Version
//@method GetVersionInfo
//请求服务端
message RequestVersionGetVersionInfo {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; //版本ID
}

// 返回客户端
message ResponseVersionGetVersionInfo {
    BiuRpc.Base.Response base = 1;
    Version versionInfo = 2; //版本详情
}

//@desc 新增\编辑版本
//@class Version
//@method SaveVersion
//请求服务端
message RequestVersionSaveVersion {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; //版本ID
    string buildNum = 3; //内部版本号
    string version = 4; //外部版本号
    string platform = 5; //平台:1.IOS;2.Android
    string channel = 6; //渠道(为空不区分渠道)
    bool isForce = 7; //是否强制更新:0.否;1.是
    bool isReview = 8; //是否正在审核中(0.否;1.是)
    string url = 9; //下载链接
    string apiUrl = 10; //接口连接
    string uploadUrl = 11; //上传连接
    string desc = 12; //更新说明
    int32 status = 13; //状态:0.禁用;1.正常
}

// 返回客户端
message ResponseVersionSaveVersion {
    BiuRpc.Base.Response base = 1;
}

//========================================
//(Version) end
//========================================

//========================================
//@group RestrictedList 黑名单
//黑名单(RestrictedList) begin
//========================================

//黑名单信息
message Black {
    int32 id = 1; //ID
    int32 userId = 2; //用户ID
    string account = 3; //账号
    string createTime = 4; //创建时间
}

//添加黑名单请求信息
message Restrict {
    int32 userId = 2; //用户ID
    string account = 3; //账户
    string reson = 4; //原因
}

//@desc 获取黑名单列表
//@class RestrictedList
//@method GetRestrictedList
//请求服务端
message RequestRestrictedListGetRestrictedList {
    BiuRpc.Base.Request base = 1;
    int32 page = 2; //页码(从1开始)
    int32 pageSize = 3; //页长(默认为10)
    string startTime = 4; //开始时间
    string endTime = 5; //结束时间
    string account = 6; //账户
}

// 返回客户端
message ResponseRestrictedListGetRestrictedList {
    BiuRpc.Base.Response base = 1;
    repeated Black restrictedList = 2; //黑名单列表
    int32 total = 3; //总数量
}

//@desc 删除黑名单
//@class RestrictedList
//@method Delete
//请求服务端
message RequestRestrictedListDelete {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; //黑名单ID
}

// 返回客户端
message ResponseRestrictedListDelete {
    BiuRpc.Base.Response base = 1;
}

//@desc 添加黑名单
//@class RestrictedList
//@method SaveRestrictedList
//请求服务端
message RequestRestrictedListSaveRestrictedList {
    BiuRpc.Base.Request base = 1;
    repeated Restrict restrictedList = 2; //添加黑名单数组
}

// 返回客户端
message ResponseRestrictedListSaveRestrictedList {
    BiuRpc.Base.Response base = 1;
}

//========================================
//(RestrictedList) end
//========================================

//========================================
//@group User 用户
//用户(User) begin
//========================================

//@desc 更新用户信息
//@class User
//@method UpdateInfo
//请求服务端-更新用户信息
message RequestUserUpdateInfo {
    BiuRpc.Base.Request base = 1;
    string nickname = 2; //昵称
    string avatarPictureToken = 3; //头像
    BiuRpc.Base.SignUserSex sex = 4; //性别
    string birthday = 5; //生日（时间戳）
    string interest = 6; //兴趣ID（小写逗号拼接）
}
//返回客户端-更新用户信息
message ResponseUserUpdateInfo {
    BiuRpc.Base.Response base = 1;
    BiuRpc.Base.User userInfo = 2; //用户信息
}

//请求服务端
//@desc 获取用户信息
//@class User
//@method GetInfo
//请求服务端-获取用户信息
message RequestUserGetInfo {
    BiuRpc.Base.Request base = 1;
    string userId = 2; //用户ID
}
//返回客户端-获取用户信息
message ResponseUserGetInfo {
    BiuRpc.Base.Response base = 1;
    BiuRpc.Base.User userInfo = 2; //用户名
}

//@desc 用户登录
//@class User
//@method Login
//请求服务端
message RequestUserLogin {
    BiuRpc.Base.Request base = 1;
    string username = 2; //用户名
    string password = 3; //密码
}
//返回客户端
message ResponseUserLogin {
    BiuRpc.Base.Response base = 1;
    string sessionId = 2; //会话Id
    int32 sessionType = 3; //会话类型
    string token = 4; //令牌
    BiuRpc.Base.User userInfo = 5; //用户信息
}

//@desc 用户退出登录
//@class User
//@method Logout
//请求服务端-退出
message RequestUserLogout {
    BiuRpc.Base.Request base = 1;
}
//返回客户端-退出
message ResponseUserLogout {
    BiuRpc.Base.Response base = 1;
}

//@desc 修改登录密码
//@class User
//@method ChangePassword
//请求服务端
message RequestUserChangePassword {
    BiuRpc.Base.Request base = 1;
    string password = 2; //当前登录密码
    string newPassword = 3; //新登录密码
}
//返回客户端
message ResponseUserChangePassword {
    BiuRpc.Base.Response base = 1;
}

//========================================
//用户(User) end
//========================================

//========================================
//@group Banner 轮播图
//用户(Banner) begin
//========================================

message Banner {
    int32 id = 1; //序号
    string url = 2; //预览
    string title = 3; //标题
    int32 bizId = 4; //任务ID
    string beginTime = 5; //开始时间
    string endTime = 6; //结束时间
    int32 status = 7; //状态
    int32 picture = 8; //图片
}
//@desc 轮播图管理
//@class Banner
//@method GetBannerList
//请求服务端
message RequestBannerGetBannerList {
    BiuRpc.Base.Request base = 1;

}
//返回客户端
message ResponseBannerGetBannerList {
    BiuRpc.Base.Response base = 1;
    repeated Banner bannerList = 2;
}
enum BannerStatus {
    BANNER_STOP = 0; //关闭
    BANNER_START = 1; //开启
}

enum BannerType {
    BANNER_TYPE_1 = 0; //跳转链接
    BANNER_TYPE_2 = 1; //跳转商品详情
}

//@desc 新增轮播图
//@class Banner
//@method AddBanner
//请求服务端
message RequestBannerAddBanner {
    int32 sort = 1; //序号
    string url = 2; //预览
    string title = 3; //标题
    int32 bizId = 4; //任务ID
    string beginTime = 5; //开始时间
    string endTime = 6; //结束时间
    BannerStatus status = 7; //状态
    int32 picture = 8; //图片
    int32 id = 9; //选填  id
    BannerType navType = 10; //跳转类型

}
//返回客户端
message ResponseBannerAddBanner {
    BiuRpc.Base.Response base = 1;
}

//@desc 删除轮播图
//@class Banner
//@method DeleteBanner
//请求服务端
message RequestBannerDeleteBanner {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; // id

}
//返回客户端
message ResponseBannerDeleteBanner {
    BiuRpc.Base.Response base = 1;
}

//@desc 轮播图详情
//@class Banner
//@method GetBannerInfo
//请求服务端
message RequestBannerGetBannerInfo {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; // id

}
//返回客户端
message ResponseBannerGetBannerInfo {
    BiuRpc.Base.Response base = 1;
    Banner total = 2;
}

//========================================
//(Banner) end
//========================================

//========================================
//@group Auth 权限
//权限(Auth) begin
//========================================

message AuthGroup {
    int32 id = 1; //分组ID
    string name = 2; //分组名称
    string moduleName = 3; //模块名称
    string description = 4; //描述
    SignAuthGroupStatus status = 5; //状态
}

enum SignAuthGroupStatus {
    AUTH_GROUP_STATUS_NONE = 0; //删除
    AUTH_GROUP_STATUS_NORMAL = 1; //正常
    AUTH_GROUP_STATUS_DISABLE = 2; //禁用
}

//权限节点
message AuthNode {
    int32 id = 1; //ID
    string title = 2; //标题
    int32 pid = 3; //上级ID
    int32 sort = 4; //排序
    string moduleName = 5; //模型名称
    string controllerName = 6; //控制器名称
    string methodName = 7; //方法名称
    int32 hide = 8; //是否隐藏
    string tip = 9; //提示
    string group = 10; //分组
    string icon = 11; //图标
    bool isDev = 12; //是否仅开发者模式可见
    int32 status = 13; //状态
    repeated AuthNode nodeList = 14; //子节点列表
    bool authSelected = 15; //权限节点选中
}

//@desc 获取权限分组列表
//@class Auth
//@method GetGroupList
//请求服务端
message RequestAuthGetGroupList {
    BiuRpc.Base.Request base = 1;
    int32 page = 2; //页数
    int32 pageSize = 3; //分页长度
    SignAuthGroupStatus status = 4; //状态
}

// 返回客户端
message ResponseAuthGetGroupList {
    BiuRpc.Base.Response base = 1;
    repeated AuthGroup groupList = 2; //分组列表
}

//@desc 添加权限分组
//@class Auth
//@method AddGroup
//请求服务端
message RequestAuthAddGroup {
    BiuRpc.Base.Request base = 1;
    string title = 2; //分组名称
    string module = 3; //模块名称
    string description = 4; //描述
    bool isRoot = 5; //是否超级管理员
    SignAuthGroupStatus status = 6; //状态
}

// 返回客户端
message ResponseAuthAddGroup {
    BiuRpc.Base.Response base = 1;
}

//@desc 编辑权限分组
//@class Auth
//@method UpdateGroup
//请求服务端
message RequestAuthUpdateGroup {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; //分组ID
    string title = 3; //分组名称
    bool isUpdateTitle = 4; //是否更新分组名称
    string module = 5; //模块名称
    bool isUpdateModule = 6; //是否更新模块名称
    string description = 7; //描述
    bool isUpdateDescription = 8; //是否更新描述
    bool isRoot = 9; //是否超级管理员
    bool isUpdateIsRoot = 10; //是否更新是否超级管理员
    SignAuthGroupStatus status = 11; //状态
    bool isUpdateStatus = 12; //是否更新状态
}

// 返回客户端
message ResponseAuthUpdateGroup {
    BiuRpc.Base.Response base = 1;
}

//@desc 删除权限分组
//@class Auth
//@method DeleteGroup
//请求服务端
message RequestAuthDeleteGroup {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; //分组ID
}

// 返回客户端
message ResponseAuthDeleteGroup {
    BiuRpc.Base.Response base = 1;
}

//@desc 获取权限分组下的节点树
//@class Auth
//@method GetNodeTree
//请求服务端
message RequestAuthGetNodeTree {
    BiuRpc.Base.Request base = 1;
    int32 groupId = 2; //分组ID
}

// 返回客户端
message ResponseAuthGetNodeTree {
    BiuRpc.Base.Response base = 1;
    repeated AuthNode nodeTree = 2; //节点树
}

//@desc 更新权限分组下的节点树
//@class Auth
//@method UpdateNodeTree
//请求服务端
message RequestAuthUpdateNodeTree {
    BiuRpc.Base.Request base = 1;
    repeated AuthNode nodeTree = 2; //节点树
}

// 返回客户端
message ResponseAuthUpdateNodeTree {
    BiuRpc.Base.Response base = 1;
}

//@desc 获取权限分组下的用户列表
//@class Auth
//@method GetGroupUserList
//请求服务端
message RequestAuthGetGroupUserList {
    BiuRpc.Base.Request base = 1;
    int32 groupId = 2; //分组ID
}

// 返回客户端
message ResponseAuthGetGroupUserList {
    BiuRpc.Base.Response base = 1;
    repeated BiuRpc.Base.User userList = 2; //用户列表
}

//@desc 添加权限分组下的用户
//@class Auth
//@method AddGroupUser
//请求服务端
message RequestAuthAddGroupUser {
    BiuRpc.Base.Request base = 1;
    int32 groupId = 2; //分组ID
    string userId = 3; //用户ID
}

// 返回客户端
message ResponseAuthAddGroupUser {
    BiuRpc.Base.Response base = 1;
}

//@desc 删除权限分组下的用户
//@class Auth
//@method DeleteGroupUser
//请求服务端
message RequestAuthDeleteGroupUser {
    BiuRpc.Base.Request base = 1;
    int32 groupId = 2; //分组ID
    string userId = 3; //用户ID
}

// 返回客户端
message ResponseAuthDeleteGroupUser {
    BiuRpc.Base.Response base = 1;
}

//@desc 获取节点列表
//@class Auth
//@method GetAuthNodeList
//请求服务端
message RequestAuthGetAuthNodeList {
    BiuRpc.Base.Request base = 1;
    int32 page = 2; //页码(从1开始)
    int32 pageSize = 3; //页长(默认为10)
    int32 pid = 4; //上级菜单ID
    string title = 5; //菜单名称
}

// 返回客户端
message ResponseAuthGetAuthNodeList {
    BiuRpc.Base.Response base = 1;
    repeated AuthNode authNodeList = 2; //节点列表
    int32 total = 3; //总数量
}

//@desc 获取节点详情
//@class Auth
//@method GetAuthNodeInfo
//请求服务端
message RequestAuthGetAuthNodeInfo {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; //菜单ID
}

// 返回客户端
message ResponseAuthGetAuthNodeInfo {
    BiuRpc.Base.Response base = 1;
    AuthNode authNodeInfo = 2; //菜单详情
}

//@desc 新增\编辑节点
//@class Auth
//@method SaveAuthNode
//请求服务端
message RequestAuthSaveAuthNode {
    BiuRpc.Base.Request base = 1;
    int32 id = 2; //菜单ID
    string title = 3; //标题
    int32 sort = 4; //排序
    string moduleName = 5; //模型名称
    string controllerName = 6; //控制器名称
    string methodName = 7; //方法名称
    int32 hide = 8; //是否隐藏
    string tip = 9; //提示
    string icon = 10; //图标
    bool isDev = 11; //是否仅开发者模式可见
    int32 status = 12; //状态
}

// 返回客户端
message ResponseAuthSaveAuthNode {
    BiuRpc.Base.Response base = 1;
}

//========================================
//权限(Auth) end
//========================================

//========================================
//@group ScalperTask 任务管理
//任务管理(ScalperTask) begin
//========================================

message CommentType {
    int32 type = 1;
    string price = 2;
}
// 刷单任务
message ScalperTask {
    string title = 2; //标题
    string description = 3; //商品详情(HTML)
    int32 categoryId = 4; //分类ID
    string asinCode = 5; //ASIN码
    string parentAsinCode = 6; //父ASIN
    int32 deliveryId = 7; //配送方式ID
    string buyUrl = 8; //购买链接
    int32 totalNumber = 9; //总数量
    int32 commentPercent = 10; //评论比例(1*10000)
    repeated string keywords = 11; //关键字
    string merchantRemark = 12; //商户备注
    int32 beginTime = 13; //开始时间(时间戳,秒)
    int32 endTime = 14; //结束时间(时间戳,秒)
    int32 isFast = 15; //是否尽快派单
    string marketPrice = 16; //市场价格
    string backPrice = 17; //返现
    string price = 18; //应付金额
    string bonusPrice = 19; //推广费
    string premiumMoney = 20; //保险费
    int32 sellerId = 21;
    string discountPrice = 22; //折后价
    repeated CommentType commentType = 23; //评价类型
    int32 isNeedInsurance = 27; //是否需要投保 0:否 1:是
    string paymentTotalMoney = 28; //冻结金额
    string commentUnitPrice = 30; //评价单价
    string platformServiceFee = 31; //平台服务费
}


//@desc 任务管理
//@class ScalperTask
//@method GetTaskList
//请求服务端
message RequestScalperTaskGetTaskList {
    BiuRpc.Base.Request base = 1;
    int32 page = 2;
    int32 pageSize = 3;
    int32 taskId = 4;
    string asinCode = 5;
    int32 merchantId = 6;
    int32 beginTime = 7;
    int32 endTime = 8;
    int32 status = 9;
    int32 platformId = 10;
}

// 返回客户端
message ResponseScalperTaskGetTaskList {
    BiuRpc.Base.Response base = 1;
    repeated ScalperTask taskList = 2;
}

//@desc 任务详情
//@class ScalperTask
//@method GetTaskInfo
//请求服务端
message RequestScalperTaskGetTaskInfo {
    BiuRpc.Base.Request base = 1;
    int32 id = 2;
}

// 返回客户端
message ResponseScalperTaskGetTaskInfo {
    BiuRpc.Base.Response base = 1;
    ScalperTask taskDetail = 2;
}

//========================================
//任务管理(ScalperTask) end
//========================================

//========================================
//@group Article 文章管理
//任务管理(Article) begin
//========================================

message Article {
    int32 Id = 1;
    int32 type = 2; //类型
    string title = 3; //标题
    int32 categoryId = 4; //分类
    string dynamics_type = 5; //动态类型
    string content = 6; //文章内容
    int32 clickCount = 7; //点击数
    int32 createUserId = 8; //创建者
    int32 createTime = 9; //创建时间
    int32 isShow = 10; //是否显示
    int32 sort = 11; //排序
    int32 status = 12; //状态
}

//@desc 文章列表
//@class Article
//@method GetList
//请求服务端
message RequestArticleGetList {
    BiuRpc.Base.Request base = 1;
    int32 page = 2;
    int32 pageSize = 3;
}

// 返回客户端
message ResponseArticleGetList {
    BiuRpc.Base.Response base = 1;
    repeated Article articleList = 2;
    int32  total = 3;
}

//@desc 删除文章
//@class Article
//@method DeleteArticle
//请求服务端
message RequestArticleDeleteArticle {
    BiuRpc.Base.Request base = 1;
    int32 id = 2;
}

// 返回客户端
message ResponseArticleDeleteArticle {
    BiuRpc.Base.Response base = 1;
}

//@desc 文章详情
//@class Article
//@method GetArticleInfo
//请求服务端
message RequestArticleGetArticleInfo {
    BiuRpc.Base.Request base = 1;
    int32 id = 2;
}

// 返回客户端
message ResponseArticleGetArticleInfo {
    BiuRpc.Base.Response base = 1;
    Article articleInfo = 2;
}


//@desc 添加/编辑文章
//@class Article
//@method AddArticle
//请求服务端
message RequestArticleAddArticle {
    BiuRpc.Base.Request base = 1;
    int32 Id = 2;
    int32 type = 3; //类型
    string title = 4; //标题
    int32 categoryId = 5; //分类
    string dynamics_type = 6; //动态类型
    string content = 7; //文章内容
    int32 clickCount = 8; //点击数
    int32 createUserId = 9; //创建者
    int32 createTime = 10; //创建时间
    int32 isShow = 11; //是否显示
    int32 sort = 12; //排序
    int32 status = 13; //状态
}

// 返回客户端
message ResponseArticleAddArticle {
    BiuRpc.Base.Response base = 1;
}

//========================================
//任务管理(Article) end
//========================================

