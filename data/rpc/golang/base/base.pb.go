// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

package BiuRpc_Base

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//头部的协议类型
type SignHeaderRequestType int32

const (
	SignHeaderRequestType_HEADER_REQUEST_TYPE_NONE     SignHeaderRequestType = 0
	SignHeaderRequestType_HEADER_REQUEST_TYPE_REQUEST  SignHeaderRequestType = 1
	SignHeaderRequestType_HEADER_REQUEST_TYPE_NOTIFY   SignHeaderRequestType = 2
	SignHeaderRequestType_HEADER_REQUEST_TYPE_RESPONSE SignHeaderRequestType = 3
	SignHeaderRequestType_HEADER_REQUEST_TYPE_HANDLE   SignHeaderRequestType = 4
)

var SignHeaderRequestType_name = map[int32]string{
	0: "HEADER_REQUEST_TYPE_NONE",
	1: "HEADER_REQUEST_TYPE_REQUEST",
	2: "HEADER_REQUEST_TYPE_NOTIFY",
	3: "HEADER_REQUEST_TYPE_RESPONSE",
	4: "HEADER_REQUEST_TYPE_HANDLE",
}

var SignHeaderRequestType_value = map[string]int32{
	"HEADER_REQUEST_TYPE_NONE":     0,
	"HEADER_REQUEST_TYPE_REQUEST":  1,
	"HEADER_REQUEST_TYPE_NOTIFY":   2,
	"HEADER_REQUEST_TYPE_RESPONSE": 3,
	"HEADER_REQUEST_TYPE_HANDLE":   4,
}

func (x SignHeaderRequestType) String() string {
	return proto.EnumName(SignHeaderRequestType_name, int32(x))
}

func (SignHeaderRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{0}
}

//头部的协议类型
type SignHeaderProtocol int32

const (
	SignHeaderProtocol_HEADER_PROTOCOL_NONE SignHeaderProtocol = 0
	SignHeaderProtocol_HEADER_PROTOCOL_PB   SignHeaderProtocol = 1
	SignHeaderProtocol_HEADER_PROTOCOL_JSON SignHeaderProtocol = 2
	SignHeaderProtocol_HEADER_PROTOCOL_XML  SignHeaderProtocol = 3
)

var SignHeaderProtocol_name = map[int32]string{
	0: "HEADER_PROTOCOL_NONE",
	1: "HEADER_PROTOCOL_PB",
	2: "HEADER_PROTOCOL_JSON",
	3: "HEADER_PROTOCOL_XML",
}

var SignHeaderProtocol_value = map[string]int32{
	"HEADER_PROTOCOL_NONE": 0,
	"HEADER_PROTOCOL_PB":   1,
	"HEADER_PROTOCOL_JSON": 2,
	"HEADER_PROTOCOL_XML":  3,
}

func (x SignHeaderProtocol) String() string {
	return proto.EnumName(SignHeaderProtocol_name, int32(x))
}

func (SignHeaderProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{1}
}

//头部的加密混淆类型
type SignHeaderCrypt int32

const (
	SignHeaderCrypt_HEADER_CRYPT_NONE SignHeaderCrypt = 0
	SignHeaderCrypt_HEADER_CRYPT_RSA  SignHeaderCrypt = 1
)

var SignHeaderCrypt_name = map[int32]string{
	0: "HEADER_CRYPT_NONE",
	1: "HEADER_CRYPT_RSA",
}

var SignHeaderCrypt_value = map[string]int32{
	"HEADER_CRYPT_NONE": 0,
	"HEADER_CRYPT_RSA":  1,
}

func (x SignHeaderCrypt) String() string {
	return proto.EnumName(SignHeaderCrypt_name, int32(x))
}

func (SignHeaderCrypt) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{2}
}

// 图片数据格式
type SignPictureDataType int32

const (
	SignPictureDataType_PICTURE_DATA_TYPE_NONE   SignPictureDataType = 0
	SignPictureDataType_PICTURE_DATA_TYPE_URL    SignPictureDataType = 1
	SignPictureDataType_PICTURE_DATA_TYPE_BASE64 SignPictureDataType = 2
)

var SignPictureDataType_name = map[int32]string{
	0: "PICTURE_DATA_TYPE_NONE",
	1: "PICTURE_DATA_TYPE_URL",
	2: "PICTURE_DATA_TYPE_BASE64",
}

var SignPictureDataType_value = map[string]int32{
	"PICTURE_DATA_TYPE_NONE":   0,
	"PICTURE_DATA_TYPE_URL":    1,
	"PICTURE_DATA_TYPE_BASE64": 2,
}

func (x SignPictureDataType) String() string {
	return proto.EnumName(SignPictureDataType_name, int32(x))
}

func (SignPictureDataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{3}
}

//跳转类型
type SignNavType int32

const (
	SignNavType_LINK_TYPE_NONE           SignNavType = 0
	SignNavType_LINK_TYPE_WEB            SignNavType = 1
	SignNavType_LINK_TYPE_UPDATE         SignNavType = 2
	SignNavType_LINK_TYPE_USER_MESSAGE   SignNavType = 3
	SignNavType_LINK_TYPE_OUTSIDE_WEB    SignNavType = 4
	SignNavType_LINK_TYPE_ARTICLE        SignNavType = 5
	SignNavType_LINK_TYPE_COUPON_OVERDUE SignNavType = 6
)

var SignNavType_name = map[int32]string{
	0: "LINK_TYPE_NONE",
	1: "LINK_TYPE_WEB",
	2: "LINK_TYPE_UPDATE",
	3: "LINK_TYPE_USER_MESSAGE",
	4: "LINK_TYPE_OUTSIDE_WEB",
	5: "LINK_TYPE_ARTICLE",
	6: "LINK_TYPE_COUPON_OVERDUE",
}

var SignNavType_value = map[string]int32{
	"LINK_TYPE_NONE":           0,
	"LINK_TYPE_WEB":            1,
	"LINK_TYPE_UPDATE":         2,
	"LINK_TYPE_USER_MESSAGE":   3,
	"LINK_TYPE_OUTSIDE_WEB":    4,
	"LINK_TYPE_ARTICLE":        5,
	"LINK_TYPE_COUPON_OVERDUE": 6,
}

func (x SignNavType) String() string {
	return proto.EnumName(SignNavType_name, int32(x))
}

func (SignNavType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{4}
}

//用户性别
type SignUserSex int32

const (
	SignUserSex_USER_SEX_NONE  SignUserSex = 0
	SignUserSex_USER_SEX_MAN   SignUserSex = 1
	SignUserSex_USER_SEX_WOMAN SignUserSex = 2
)

var SignUserSex_name = map[int32]string{
	0: "USER_SEX_NONE",
	1: "USER_SEX_MAN",
	2: "USER_SEX_WOMAN",
}

var SignUserSex_value = map[string]int32{
	"USER_SEX_NONE":  0,
	"USER_SEX_MAN":   1,
	"USER_SEX_WOMAN": 2,
}

func (x SignUserSex) String() string {
	return proto.EnumName(SignUserSex_name, int32(x))
}

func (SignUserSex) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{5}
}

//用户消息类型
type SignUserMessageType int32

const (
	SignUserMessageType_USER_MESSAGE_TYPE_SYSTEM           SignUserMessageType = 0
	SignUserMessageType_USER_MESSAGE_TYPE_OVERDUE_REMINDER SignUserMessageType = 1
	SignUserMessageType_USER_MESSAGE_TYPE_COUPON           SignUserMessageType = 2
)

var SignUserMessageType_name = map[int32]string{
	0: "USER_MESSAGE_TYPE_SYSTEM",
	1: "USER_MESSAGE_TYPE_OVERDUE_REMINDER",
	2: "USER_MESSAGE_TYPE_COUPON",
}

var SignUserMessageType_value = map[string]int32{
	"USER_MESSAGE_TYPE_SYSTEM":           0,
	"USER_MESSAGE_TYPE_OVERDUE_REMINDER": 1,
	"USER_MESSAGE_TYPE_COUPON":           2,
}

func (x SignUserMessageType) String() string {
	return proto.EnumName(SignUserMessageType_name, int32(x))
}

func (SignUserMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{6}
}

// 支付方式
type SignPayment int32

const (
	SignPayment_PAYMENT_TYPE_BANK   SignPayment = 0
	SignPayment_PAYMENT_TYPE_ALIPAY SignPayment = 1
	SignPayment_PAYMENT_TYPE_WECHAT SignPayment = 2
)

var SignPayment_name = map[int32]string{
	0: "PAYMENT_TYPE_BANK",
	1: "PAYMENT_TYPE_ALIPAY",
	2: "PAYMENT_TYPE_WECHAT",
}

var SignPayment_value = map[string]int32{
	"PAYMENT_TYPE_BANK":   0,
	"PAYMENT_TYPE_ALIPAY": 1,
	"PAYMENT_TYPE_WECHAT": 2,
}

func (x SignPayment) String() string {
	return proto.EnumName(SignPayment_name, int32(x))
}

func (SignPayment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{7}
}

// 订单状态
type SignOrderStatus int32

const (
	SignOrderStatus_ORDER_STATUS_USELESS       SignOrderStatus = 0
	SignOrderStatus_ORDER_STATUS_ORDER_WAIT    SignOrderStatus = 1
	SignOrderStatus_ORDER_STATUS_ORDER_SURE    SignOrderStatus = 2
	SignOrderStatus_ORDER_STATUS_ORDER_SUCCESS SignOrderStatus = 3
	SignOrderStatus_ORDER_STATUS_ORDER_FAILED  SignOrderStatus = 4
)

var SignOrderStatus_name = map[int32]string{
	0: "ORDER_STATUS_USELESS",
	1: "ORDER_STATUS_ORDER_WAIT",
	2: "ORDER_STATUS_ORDER_SURE",
	3: "ORDER_STATUS_ORDER_SUCCESS",
	4: "ORDER_STATUS_ORDER_FAILED",
}

var SignOrderStatus_value = map[string]int32{
	"ORDER_STATUS_USELESS":       0,
	"ORDER_STATUS_ORDER_WAIT":    1,
	"ORDER_STATUS_ORDER_SURE":    2,
	"ORDER_STATUS_ORDER_SUCCESS": 3,
	"ORDER_STATUS_ORDER_FAILED":  4,
}

func (x SignOrderStatus) String() string {
	return proto.EnumName(SignOrderStatus_name, int32(x))
}

func (SignOrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{8}
}

//请求包的头信息
type Header struct {
	RequestType          SignHeaderRequestType `protobuf:"varint,1,opt,name=requestType,proto3,enum=BiuRpc.Base.SignHeaderRequestType" json:"requestType,omitempty"`
	StatusCode           int32                 `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	ModuleCode           int32                 `protobuf:"varint,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	ClassCode            int32                 `protobuf:"varint,4,opt,name=classCode,proto3" json:"classCode,omitempty"`
	MethodCode           int32                 `protobuf:"varint,5,opt,name=methodCode,proto3" json:"methodCode,omitempty"`
	Protocol             SignHeaderProtocol    `protobuf:"varint,6,opt,name=protocol,proto3,enum=BiuRpc.Base.SignHeaderProtocol" json:"protocol,omitempty"`
	Crypt                SignHeaderCrypt       `protobuf:"varint,7,opt,name=crypt,proto3,enum=BiuRpc.Base.SignHeaderCrypt" json:"crypt,omitempty"`
	CyptKey              string                `protobuf:"bytes,8,opt,name=cyptKey,proto3" json:"cyptKey,omitempty"`
	Sign                 string                `protobuf:"bytes,9,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{0}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetRequestType() SignHeaderRequestType {
	if m != nil {
		return m.RequestType
	}
	return SignHeaderRequestType_HEADER_REQUEST_TYPE_NONE
}

func (m *Header) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Header) GetModuleCode() int32 {
	if m != nil {
		return m.ModuleCode
	}
	return 0
}

func (m *Header) GetClassCode() int32 {
	if m != nil {
		return m.ClassCode
	}
	return 0
}

func (m *Header) GetMethodCode() int32 {
	if m != nil {
		return m.MethodCode
	}
	return 0
}

func (m *Header) GetProtocol() SignHeaderProtocol {
	if m != nil {
		return m.Protocol
	}
	return SignHeaderProtocol_HEADER_PROTOCOL_NONE
}

func (m *Header) GetCrypt() SignHeaderCrypt {
	if m != nil {
		return m.Crypt
	}
	return SignHeaderCrypt_HEADER_CRYPT_NONE
}

func (m *Header) GetCyptKey() string {
	if m != nil {
		return m.CyptKey
	}
	return ""
}

func (m *Header) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

//设备基础信息
type Request struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Nonce                string   `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Timestamp            int32    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *Request) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Request) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Request) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *Request) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

//服务器返回基础数据
type Response struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Nonce                string   `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Timestamp            int32    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Code                 int32    `protobuf:"varint,6,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *Response) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Response) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Response) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *Response) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

//返回客户端-空(致命错误等情况下默认返回该结构)
type ResponseDefault struct {
	Base                 *Response `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResponseDefault) Reset()         { *m = ResponseDefault{} }
func (m *ResponseDefault) String() string { return proto.CompactTextString(m) }
func (*ResponseDefault) ProtoMessage()    {}
func (*ResponseDefault) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{3}
}

func (m *ResponseDefault) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDefault.Unmarshal(m, b)
}
func (m *ResponseDefault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDefault.Marshal(b, m, deterministic)
}
func (m *ResponseDefault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDefault.Merge(m, src)
}
func (m *ResponseDefault) XXX_Size() int {
	return xxx_messageInfo_ResponseDefault.Size(m)
}
func (m *ResponseDefault) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDefault.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDefault proto.InternalMessageInfo

func (m *ResponseDefault) GetBase() *Response {
	if m != nil {
		return m.Base
	}
	return nil
}

//图片
type Picture struct {
	Url                  string              `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Width                int32               `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32               `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Token                string              `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	DataType             SignPictureDataType `protobuf:"varint,5,opt,name=dataType,proto3,enum=BiuRpc.Base.SignPictureDataType" json:"dataType,omitempty"`
	ContentType          string              `protobuf:"bytes,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Picture) Reset()         { *m = Picture{} }
func (m *Picture) String() string { return proto.CompactTextString(m) }
func (*Picture) ProtoMessage()    {}
func (*Picture) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{4}
}

func (m *Picture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Picture.Unmarshal(m, b)
}
func (m *Picture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Picture.Marshal(b, m, deterministic)
}
func (m *Picture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Picture.Merge(m, src)
}
func (m *Picture) XXX_Size() int {
	return xxx_messageInfo_Picture.Size(m)
}
func (m *Picture) XXX_DiscardUnknown() {
	xxx_messageInfo_Picture.DiscardUnknown(m)
}

var xxx_messageInfo_Picture proto.InternalMessageInfo

func (m *Picture) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Picture) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Picture) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Picture) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Picture) GetDataType() SignPictureDataType {
	if m != nil {
		return m.DataType
	}
	return SignPictureDataType_PICTURE_DATA_TYPE_NONE
}

func (m *Picture) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

//跳转
type Nav struct {
	Type                 SignNavType `protobuf:"varint,1,opt,name=type,proto3,enum=BiuRpc.Base.SignNavType" json:"type,omitempty"`
	Url                  string      `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Id                   int32       `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Nav) Reset()         { *m = Nav{} }
func (m *Nav) String() string { return proto.CompactTextString(m) }
func (*Nav) ProtoMessage()    {}
func (*Nav) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{5}
}

func (m *Nav) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nav.Unmarshal(m, b)
}
func (m *Nav) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nav.Marshal(b, m, deterministic)
}
func (m *Nav) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nav.Merge(m, src)
}
func (m *Nav) XXX_Size() int {
	return xxx_messageInfo_Nav.Size(m)
}
func (m *Nav) XXX_DiscardUnknown() {
	xxx_messageInfo_Nav.DiscardUnknown(m)
}

var xxx_messageInfo_Nav proto.InternalMessageInfo

func (m *Nav) GetType() SignNavType {
	if m != nil {
		return m.Type
	}
	return SignNavType_LINK_TYPE_NONE
}

func (m *Nav) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Nav) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

//用户
type SimpleUser struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Nickname             string   `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar               *Picture `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Realname             string   `protobuf:"bytes,6,opt,name=realname,proto3" json:"realname,omitempty"`
	IsEmailVerify        bool     `protobuf:"varint,7,opt,name=isEmailVerify,proto3" json:"isEmailVerify,omitempty"`
	IsMobileVerify       bool     `protobuf:"varint,8,opt,name=isMobileVerify,proto3" json:"isMobileVerify,omitempty"`
	ScalperOrderCount    int32    `protobuf:"varint,9,opt,name=scalperOrderCount,proto3" json:"scalperOrderCount,omitempty"`
	AmazonAccount        string   `protobuf:"bytes,10,opt,name=amazonAccount,proto3" json:"amazonAccount,omitempty"`
	AmazonEmail          string   `protobuf:"bytes,11,opt,name=amazonEmail,proto3" json:"amazonEmail,omitempty"`
	RegTime              int32    `protobuf:"varint,12,opt,name=regTime,proto3" json:"regTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleUser) Reset()         { *m = SimpleUser{} }
func (m *SimpleUser) String() string { return proto.CompactTextString(m) }
func (*SimpleUser) ProtoMessage()    {}
func (*SimpleUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{6}
}

func (m *SimpleUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleUser.Unmarshal(m, b)
}
func (m *SimpleUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleUser.Marshal(b, m, deterministic)
}
func (m *SimpleUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleUser.Merge(m, src)
}
func (m *SimpleUser) XXX_Size() int {
	return xxx_messageInfo_SimpleUser.Size(m)
}
func (m *SimpleUser) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleUser.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleUser proto.InternalMessageInfo

func (m *SimpleUser) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SimpleUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SimpleUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SimpleUser) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *SimpleUser) GetAvatar() *Picture {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *SimpleUser) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *SimpleUser) GetIsEmailVerify() bool {
	if m != nil {
		return m.IsEmailVerify
	}
	return false
}

func (m *SimpleUser) GetIsMobileVerify() bool {
	if m != nil {
		return m.IsMobileVerify
	}
	return false
}

func (m *SimpleUser) GetScalperOrderCount() int32 {
	if m != nil {
		return m.ScalperOrderCount
	}
	return 0
}

func (m *SimpleUser) GetAmazonAccount() string {
	if m != nil {
		return m.AmazonAccount
	}
	return ""
}

func (m *SimpleUser) GetAmazonEmail() string {
	if m != nil {
		return m.AmazonEmail
	}
	return ""
}

func (m *SimpleUser) GetRegTime() int32 {
	if m != nil {
		return m.RegTime
	}
	return 0
}

//用户信息
type User struct {
	UserId               string          `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Username             string          `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Nickname             string          `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Email                string          `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Avatar               *Picture        `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Mobile               string          `protobuf:"bytes,6,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Realname             string          `protobuf:"bytes,7,opt,name=realname,proto3" json:"realname,omitempty"`
	Sex                  SignUserSex     `protobuf:"varint,8,opt,name=sex,proto3,enum=BiuRpc.Base.SignUserSex" json:"sex,omitempty"`
	Birthday             int32           `protobuf:"varint,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	UnreadMessageCount   int32           `protobuf:"varint,10,opt,name=unreadMessageCount,proto3" json:"unreadMessageCount,omitempty"`
	IsCertificate        int32           `protobuf:"varint,11,opt,name=isCertificate,proto3" json:"isCertificate,omitempty"`
	IdCardNumber         string          `protobuf:"bytes,12,opt,name=idCardNumber,proto3" json:"idCardNumber,omitempty"`
	IsEmailVerify        bool            `protobuf:"varint,13,opt,name=isEmailVerify,proto3" json:"isEmailVerify,omitempty"`
	IsMobileVerify       bool            `protobuf:"varint,14,opt,name=isMobileVerify,proto3" json:"isMobileVerify,omitempty"`
	Firstname            string          `protobuf:"bytes,15,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Lastname             string          `protobuf:"bytes,16,opt,name=lastname,proto3" json:"lastname,omitempty"`
	CurrencyId           int32           `protobuf:"varint,17,opt,name=currencyId,proto3" json:"currencyId,omitempty"`
	RegTime              int32           `protobuf:"varint,18,opt,name=regTime,proto3" json:"regTime,omitempty"`
	LastLoginTime        int32           `protobuf:"varint,19,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	Money                string          `protobuf:"bytes,20,opt,name=money,proto3" json:"money,omitempty"`
	FreezeMoney          string          `protobuf:"bytes,21,opt,name=freezeMoney,proto3" json:"freezeMoney,omitempty"`
	PowerScore           int32           `protobuf:"varint,22,opt,name=powerScore,proto3" json:"powerScore,omitempty"`
	ScalperOrderCount    int32           `protobuf:"varint,23,opt,name=scalperOrderCount,proto3" json:"scalperOrderCount,omitempty"`
	InterestList         []*UserInterest `protobuf:"bytes,24,rep,name=interestList,proto3" json:"interestList,omitempty"`
	AmazonAccount        string          `protobuf:"bytes,25,opt,name=amazonAccount,proto3" json:"amazonAccount,omitempty"`
	AmazonEmail          string          `protobuf:"bytes,26,opt,name=amazonEmail,proto3" json:"amazonEmail,omitempty"`
	HasDrawalAccount     bool            `protobuf:"varint,27,opt,name=hasDrawalAccount,proto3" json:"hasDrawalAccount,omitempty"`
	HasDrawalPwd         bool            `protobuf:"varint,28,opt,name=hasDrawalPwd,proto3" json:"hasDrawalPwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{7}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetAvatar() *Picture {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *User) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *User) GetRealname() string {
	if m != nil {
		return m.Realname
	}
	return ""
}

func (m *User) GetSex() SignUserSex {
	if m != nil {
		return m.Sex
	}
	return SignUserSex_USER_SEX_NONE
}

func (m *User) GetBirthday() int32 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

func (m *User) GetUnreadMessageCount() int32 {
	if m != nil {
		return m.UnreadMessageCount
	}
	return 0
}

func (m *User) GetIsCertificate() int32 {
	if m != nil {
		return m.IsCertificate
	}
	return 0
}

func (m *User) GetIdCardNumber() string {
	if m != nil {
		return m.IdCardNumber
	}
	return ""
}

func (m *User) GetIsEmailVerify() bool {
	if m != nil {
		return m.IsEmailVerify
	}
	return false
}

func (m *User) GetIsMobileVerify() bool {
	if m != nil {
		return m.IsMobileVerify
	}
	return false
}

func (m *User) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *User) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *User) GetCurrencyId() int32 {
	if m != nil {
		return m.CurrencyId
	}
	return 0
}

func (m *User) GetRegTime() int32 {
	if m != nil {
		return m.RegTime
	}
	return 0
}

func (m *User) GetLastLoginTime() int32 {
	if m != nil {
		return m.LastLoginTime
	}
	return 0
}

func (m *User) GetMoney() string {
	if m != nil {
		return m.Money
	}
	return ""
}

func (m *User) GetFreezeMoney() string {
	if m != nil {
		return m.FreezeMoney
	}
	return ""
}

func (m *User) GetPowerScore() int32 {
	if m != nil {
		return m.PowerScore
	}
	return 0
}

func (m *User) GetScalperOrderCount() int32 {
	if m != nil {
		return m.ScalperOrderCount
	}
	return 0
}

func (m *User) GetInterestList() []*UserInterest {
	if m != nil {
		return m.InterestList
	}
	return nil
}

func (m *User) GetAmazonAccount() string {
	if m != nil {
		return m.AmazonAccount
	}
	return ""
}

func (m *User) GetAmazonEmail() string {
	if m != nil {
		return m.AmazonEmail
	}
	return ""
}

func (m *User) GetHasDrawalAccount() bool {
	if m != nil {
		return m.HasDrawalAccount
	}
	return false
}

func (m *User) GetHasDrawalPwd() bool {
	if m != nil {
		return m.HasDrawalPwd
	}
	return false
}

// 兴趣列表
type UserInterest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInterest) Reset()         { *m = UserInterest{} }
func (m *UserInterest) String() string { return proto.CompactTextString(m) }
func (*UserInterest) ProtoMessage()    {}
func (*UserInterest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{8}
}

func (m *UserInterest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInterest.Unmarshal(m, b)
}
func (m *UserInterest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInterest.Marshal(b, m, deterministic)
}
func (m *UserInterest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInterest.Merge(m, src)
}
func (m *UserInterest) XXX_Size() int {
	return xxx_messageInfo_UserInterest.Size(m)
}
func (m *UserInterest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInterest.DiscardUnknown(m)
}

var xxx_messageInfo_UserInterest proto.InternalMessageInfo

func (m *UserInterest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInterest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//用户消息
type UserMessage struct {
	Id                   int32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SenderId             string              `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	Title                string              `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle             string              `protobuf:"bytes,4,opt,name=subTitle,proto3" json:"subTitle,omitempty"`
	Content              string              `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Nav                  *Nav                `protobuf:"bytes,6,opt,name=nav,proto3" json:"nav,omitempty"`
	Type                 SignUserMessageType `protobuf:"varint,7,opt,name=type,proto3,enum=BiuRpc.Base.SignUserMessageType" json:"type,omitempty"`
	IsRead               bool                `protobuf:"varint,8,opt,name=isRead,proto3" json:"isRead,omitempty"`
	CreateTime           int32               `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Logo                 *Picture            `protobuf:"bytes,10,opt,name=logo,proto3" json:"logo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UserMessage) Reset()         { *m = UserMessage{} }
func (m *UserMessage) String() string { return proto.CompactTextString(m) }
func (*UserMessage) ProtoMessage()    {}
func (*UserMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{9}
}

func (m *UserMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMessage.Unmarshal(m, b)
}
func (m *UserMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMessage.Marshal(b, m, deterministic)
}
func (m *UserMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMessage.Merge(m, src)
}
func (m *UserMessage) XXX_Size() int {
	return xxx_messageInfo_UserMessage.Size(m)
}
func (m *UserMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UserMessage proto.InternalMessageInfo

func (m *UserMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserMessage) GetSenderId() string {
	if m != nil {
		return m.SenderId
	}
	return ""
}

func (m *UserMessage) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UserMessage) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *UserMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *UserMessage) GetNav() *Nav {
	if m != nil {
		return m.Nav
	}
	return nil
}

func (m *UserMessage) GetType() SignUserMessageType {
	if m != nil {
		return m.Type
	}
	return SignUserMessageType_USER_MESSAGE_TYPE_SYSTEM
}

func (m *UserMessage) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

func (m *UserMessage) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *UserMessage) GetLogo() *Picture {
	if m != nil {
		return m.Logo
	}
	return nil
}

//文件上传Base64请求信息
type UploadBase64FileRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Base64Content        string   `protobuf:"bytes,2,opt,name=base64Content,proto3" json:"base64Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadBase64FileRequest) Reset()         { *m = UploadBase64FileRequest{} }
func (m *UploadBase64FileRequest) String() string { return proto.CompactTextString(m) }
func (*UploadBase64FileRequest) ProtoMessage()    {}
func (*UploadBase64FileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{10}
}

func (m *UploadBase64FileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadBase64FileRequest.Unmarshal(m, b)
}
func (m *UploadBase64FileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadBase64FileRequest.Marshal(b, m, deterministic)
}
func (m *UploadBase64FileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadBase64FileRequest.Merge(m, src)
}
func (m *UploadBase64FileRequest) XXX_Size() int {
	return xxx_messageInfo_UploadBase64FileRequest.Size(m)
}
func (m *UploadBase64FileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadBase64FileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadBase64FileRequest proto.InternalMessageInfo

func (m *UploadBase64FileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadBase64FileRequest) GetBase64Content() string {
	if m != nil {
		return m.Base64Content
	}
	return ""
}

//文件上传结果信息
type UploadFileResult struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Md5                  string   `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`
	Sha1                 int32    `protobuf:"varint,5,opt,name=sha1,proto3" json:"sha1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileResult) Reset()         { *m = UploadFileResult{} }
func (m *UploadFileResult) String() string { return proto.CompactTextString(m) }
func (*UploadFileResult) ProtoMessage()    {}
func (*UploadFileResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{11}
}

func (m *UploadFileResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileResult.Unmarshal(m, b)
}
func (m *UploadFileResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileResult.Marshal(b, m, deterministic)
}
func (m *UploadFileResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileResult.Merge(m, src)
}
func (m *UploadFileResult) XXX_Size() int {
	return xxx_messageInfo_UploadFileResult.Size(m)
}
func (m *UploadFileResult) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileResult.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileResult proto.InternalMessageInfo

func (m *UploadFileResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadFileResult) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UploadFileResult) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UploadFileResult) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *UploadFileResult) GetSha1() int32 {
	if m != nil {
		return m.Sha1
	}
	return 0
}

//图片上传结果信息
type UploadPictureResult struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Path                 string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Md5                  string   `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`
	Sha1                 string   `protobuf:"bytes,7,opt,name=sha1,proto3" json:"sha1,omitempty"`
	Width                int32    `protobuf:"varint,8,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	Mime                 string   `protobuf:"bytes,10,opt,name=mime,proto3" json:"mime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadPictureResult) Reset()         { *m = UploadPictureResult{} }
func (m *UploadPictureResult) String() string { return proto.CompactTextString(m) }
func (*UploadPictureResult) ProtoMessage()    {}
func (*UploadPictureResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{12}
}

func (m *UploadPictureResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadPictureResult.Unmarshal(m, b)
}
func (m *UploadPictureResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadPictureResult.Marshal(b, m, deterministic)
}
func (m *UploadPictureResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadPictureResult.Merge(m, src)
}
func (m *UploadPictureResult) XXX_Size() int {
	return xxx_messageInfo_UploadPictureResult.Size(m)
}
func (m *UploadPictureResult) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadPictureResult.DiscardUnknown(m)
}

var xxx_messageInfo_UploadPictureResult proto.InternalMessageInfo

func (m *UploadPictureResult) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UploadPictureResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadPictureResult) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UploadPictureResult) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UploadPictureResult) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *UploadPictureResult) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *UploadPictureResult) GetSha1() string {
	if m != nil {
		return m.Sha1
	}
	return ""
}

func (m *UploadPictureResult) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *UploadPictureResult) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *UploadPictureResult) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

//收货地址
type Address struct {
	AddressId            int32    `protobuf:"varint,1,opt,name=addressId,proto3" json:"addressId,omitempty"`
	Receiver             string   `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Mobile               string   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	ProvinceId           int32    `protobuf:"varint,4,opt,name=provinceId,proto3" json:"provinceId,omitempty"`
	ProvinceName         string   `protobuf:"bytes,5,opt,name=provinceName,proto3" json:"provinceName,omitempty"`
	CityId               int32    `protobuf:"varint,6,opt,name=cityId,proto3" json:"cityId,omitempty"`
	CityName             string   `protobuf:"bytes,7,opt,name=cityName,proto3" json:"cityName,omitempty"`
	DistrictId           int32    `protobuf:"varint,8,opt,name=districtId,proto3" json:"districtId,omitempty"`
	DistrictName         string   `protobuf:"bytes,9,opt,name=districtName,proto3" json:"districtName,omitempty"`
	Street               string   `protobuf:"bytes,10,opt,name=street,proto3" json:"street,omitempty"`
	IsDefault            int32    `protobuf:"varint,11,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_db1b6b0986796150, []int{13}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddressId() int32 {
	if m != nil {
		return m.AddressId
	}
	return 0
}

func (m *Address) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *Address) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Address) GetProvinceId() int32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *Address) GetProvinceName() string {
	if m != nil {
		return m.ProvinceName
	}
	return ""
}

func (m *Address) GetCityId() int32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *Address) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *Address) GetDistrictId() int32 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

func (m *Address) GetDistrictName() string {
	if m != nil {
		return m.DistrictName
	}
	return ""
}

func (m *Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *Address) GetIsDefault() int32 {
	if m != nil {
		return m.IsDefault
	}
	return 0
}

func init() {
	proto.RegisterEnum("BiuRpc.Base.SignHeaderRequestType", SignHeaderRequestType_name, SignHeaderRequestType_value)
	proto.RegisterEnum("BiuRpc.Base.SignHeaderProtocol", SignHeaderProtocol_name, SignHeaderProtocol_value)
	proto.RegisterEnum("BiuRpc.Base.SignHeaderCrypt", SignHeaderCrypt_name, SignHeaderCrypt_value)
	proto.RegisterEnum("BiuRpc.Base.SignPictureDataType", SignPictureDataType_name, SignPictureDataType_value)
	proto.RegisterEnum("BiuRpc.Base.SignNavType", SignNavType_name, SignNavType_value)
	proto.RegisterEnum("BiuRpc.Base.SignUserSex", SignUserSex_name, SignUserSex_value)
	proto.RegisterEnum("BiuRpc.Base.SignUserMessageType", SignUserMessageType_name, SignUserMessageType_value)
	proto.RegisterEnum("BiuRpc.Base.SignPayment", SignPayment_name, SignPayment_value)
	proto.RegisterEnum("BiuRpc.Base.SignOrderStatus", SignOrderStatus_name, SignOrderStatus_value)
	proto.RegisterType((*Header)(nil), "BiuRpc.Base.Header")
	proto.RegisterType((*Request)(nil), "BiuRpc.Base.Request")
	proto.RegisterType((*Response)(nil), "BiuRpc.Base.Response")
	proto.RegisterType((*ResponseDefault)(nil), "BiuRpc.Base.ResponseDefault")
	proto.RegisterType((*Picture)(nil), "BiuRpc.Base.Picture")
	proto.RegisterType((*Nav)(nil), "BiuRpc.Base.Nav")
	proto.RegisterType((*SimpleUser)(nil), "BiuRpc.Base.SimpleUser")
	proto.RegisterType((*User)(nil), "BiuRpc.Base.User")
	proto.RegisterType((*UserInterest)(nil), "BiuRpc.Base.UserInterest")
	proto.RegisterType((*UserMessage)(nil), "BiuRpc.Base.UserMessage")
	proto.RegisterType((*UploadBase64FileRequest)(nil), "BiuRpc.Base.UploadBase64FileRequest")
	proto.RegisterType((*UploadFileResult)(nil), "BiuRpc.Base.UploadFileResult")
	proto.RegisterType((*UploadPictureResult)(nil), "BiuRpc.Base.UploadPictureResult")
	proto.RegisterType((*Address)(nil), "BiuRpc.Base.Address")
}

func init() {
	proto.RegisterFile("base.proto", fileDescriptor_db1b6b0986796150)
}

var fileDescriptor_db1b6b0986796150 = []byte{
	// 1837 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x72, 0xdb, 0xc8,
	0x11, 0x36, 0xf8, 0x27, 0xb1, 0x69, 0xcb, 0xd0, 0x58, 0x92, 0x21, 0x59, 0xf1, 0xaa, 0x50, 0xa9,
	0x2d, 0x85, 0xe5, 0x52, 0xd5, 0x2a, 0xce, 0x5e, 0xb2, 0x49, 0x15, 0x4c, 0xc2, 0x31, 0x63, 0x8a,
	0x64, 0x06, 0xa0, 0xbd, 0x3a, 0xa9, 0x46, 0xc0, 0x48, 0x44, 0x96, 0x04, 0x18, 0x00, 0x94, 0x97,
	0xfb, 0x12, 0xb9, 0xe7, 0x9c, 0x67, 0xd8, 0xca, 0x2d, 0x95, 0x07, 0xc8, 0x31, 0xc7, 0x3c, 0x41,
	0x5e, 0x22, 0xd5, 0x33, 0x03, 0x02, 0x10, 0xa9, 0x2a, 0x27, 0xa7, 0xbd, 0x4d, 0x7f, 0xdd, 0xd3,
	0xd3, 0x7f, 0x33, 0xdd, 0x00, 0xc0, 0x35, 0x4b, 0xf8, 0xd9, 0x3c, 0x8e, 0xd2, 0x88, 0xb4, 0xde,
	0x04, 0x0b, 0x3a, 0xf7, 0xce, 0xde, 0xb0, 0x84, 0x9b, 0xff, 0xa9, 0x40, 0xe3, 0x1d, 0x67, 0x3e,
	0x8f, 0x49, 0x17, 0x5a, 0x31, 0xff, 0xd3, 0x82, 0x27, 0xa9, 0xbb, 0x9c, 0x73, 0x43, 0x3b, 0xd1,
	0x4e, 0x77, 0xce, 0xcd, 0xb3, 0x82, 0xf4, 0x99, 0x13, 0xdc, 0x86, 0x52, 0x9a, 0xe6, 0x92, 0xb4,
	0xb8, 0x8d, 0xbc, 0x04, 0x48, 0x52, 0x96, 0x2e, 0x92, 0x4e, 0xe4, 0x73, 0xa3, 0x72, 0xa2, 0x9d,
	0xd6, 0x69, 0x01, 0x41, 0xfe, 0x2c, 0xf2, 0x17, 0x53, 0x2e, 0xf8, 0x55, 0xc9, 0xcf, 0x11, 0x72,
	0x0c, 0x4d, 0x6f, 0xca, 0x12, 0xb9, 0xbd, 0x26, 0xd8, 0x39, 0x20, 0x76, 0xf3, 0x74, 0x12, 0xf9,
	0x82, 0x5d, 0x57, 0xbb, 0x57, 0x08, 0xf9, 0x35, 0x6c, 0x0b, 0x27, 0xbd, 0x68, 0x6a, 0x34, 0x84,
	0x03, 0x5f, 0x3c, 0xe0, 0xc0, 0x48, 0x89, 0xd1, 0xd5, 0x06, 0x72, 0x0e, 0x75, 0x2f, 0x5e, 0xce,
	0x53, 0x63, 0x4b, 0xec, 0x3c, 0x7e, 0x60, 0x67, 0x07, 0x65, 0xa8, 0x14, 0x25, 0x06, 0x6c, 0x79,
	0xcb, 0x79, 0xfa, 0x9e, 0x2f, 0x8d, 0xed, 0x13, 0xed, 0xb4, 0x49, 0x33, 0x92, 0x10, 0xa8, 0x25,
	0xc1, 0x6d, 0x68, 0x34, 0x05, 0x2c, 0xd6, 0xe6, 0x9f, 0x35, 0xd8, 0x52, 0x91, 0x43, 0x47, 0x13,
	0x9e, 0x24, 0x41, 0x14, 0xf6, 0x7c, 0x11, 0xec, 0x26, 0xcd, 0x01, 0xe4, 0xaa, 0xa8, 0xf6, 0x7c,
	0x11, 0xc5, 0x26, 0xcd, 0x01, 0xb2, 0x07, 0xf5, 0x34, 0xfa, 0x8e, 0x87, 0x22, 0x7e, 0x4d, 0x2a,
	0x09, 0x44, 0xc3, 0x28, 0xf4, 0x64, 0xd8, 0x9a, 0x54, 0x12, 0xa8, 0x29, 0x0d, 0x66, 0x3c, 0x49,
	0xd9, 0x6c, 0xae, 0x22, 0x96, 0x03, 0xe6, 0x8f, 0x1a, 0x6c, 0x53, 0x9e, 0xcc, 0xa3, 0x30, 0xe1,
	0x3f, 0x0d, 0x93, 0x30, 0x70, 0x1e, 0x66, 0xb7, 0x21, 0x18, 0x62, 0x4d, 0x74, 0xa8, 0xce, 0x92,
	0x5b, 0x91, 0x98, 0x26, 0xc5, 0xa5, 0xf9, 0x0d, 0x3c, 0xcd, 0xec, 0xee, 0xf2, 0x1b, 0xb6, 0x98,
	0xa6, 0xe4, 0x17, 0x50, 0xc3, 0x32, 0x17, 0x96, 0xb7, 0xce, 0xf7, 0x4b, 0xe9, 0xcb, 0x64, 0xa9,
	0x10, 0x31, 0xff, 0xae, 0xc1, 0xd6, 0x28, 0xf0, 0xd2, 0x45, 0x2c, 0x74, 0x2f, 0xe2, 0xa9, 0xf2,
	0x17, 0x97, 0x68, 0xf5, 0xa7, 0xc0, 0x4f, 0x27, 0xaa, 0x7c, 0x25, 0x41, 0x0e, 0xa0, 0x31, 0xe1,
	0xc1, 0xed, 0x24, 0x55, 0x55, 0xab, 0xa8, 0xdc, 0xf3, 0x5a, 0xd1, 0xf3, 0x6f, 0x60, 0xdb, 0x67,
	0x29, 0x13, 0x57, 0xa9, 0x2e, 0xea, 0xe9, 0x64, 0xad, 0x9e, 0x94, 0x05, 0x5d, 0x25, 0x47, 0x57,
	0x3b, 0xc8, 0x09, 0xb4, 0xbc, 0x28, 0x4c, 0x79, 0x28, 0xef, 0x62, 0x43, 0x68, 0x2e, 0x42, 0xe6,
	0x18, 0xaa, 0x03, 0x76, 0x47, 0x5e, 0x41, 0x2d, 0xcd, 0x6f, 0xab, 0xb1, 0x76, 0xc4, 0x80, 0xdd,
	0x09, 0xd5, 0x42, 0x2a, 0x73, 0xb5, 0x92, 0xbb, 0xba, 0x03, 0x95, 0xc0, 0x57, 0x0e, 0x55, 0x02,
	0xdf, 0xfc, 0x4b, 0x15, 0xc0, 0x09, 0x66, 0xf3, 0x29, 0x1f, 0x27, 0x3c, 0x46, 0x9f, 0x17, 0x09,
	0x8f, 0x57, 0xe5, 0xa0, 0x28, 0x72, 0x04, 0xdb, 0xb8, 0x0a, 0xd9, 0x8c, 0x2b, 0x6d, 0x2b, 0x1a,
	0xe3, 0xc1, 0x67, 0x2c, 0x98, 0x66, 0x95, 0x20, 0x08, 0xdc, 0x11, 0x06, 0xde, 0x77, 0x62, 0x87,
	0x0c, 0xd4, 0x8a, 0x26, 0xaf, 0xa0, 0xc1, 0xee, 0x58, 0xca, 0x62, 0x11, 0xa9, 0xd6, 0xf9, 0x5e,
	0xc9, 0x0d, 0x15, 0x25, 0xaa, 0x64, 0x50, 0x53, 0xcc, 0xd9, 0x54, 0x68, 0x92, 0x81, 0x59, 0xd1,
	0xe4, 0xe7, 0xf0, 0x24, 0x48, 0x6c, 0x3c, 0xf0, 0x03, 0x8f, 0x83, 0x9b, 0xa5, 0xa8, 0x98, 0x6d,
	0x5a, 0x06, 0xc9, 0x97, 0xb0, 0x13, 0x24, 0x17, 0xd1, 0x75, 0x30, 0xe5, 0x4a, 0x6c, 0x5b, 0x88,
	0xdd, 0x43, 0xc9, 0x2b, 0xd8, 0x4d, 0x3c, 0x36, 0x9d, 0xf3, 0x78, 0x18, 0xe3, 0xc5, 0x8f, 0x16,
	0x61, 0x2a, 0xee, 0x73, 0x9d, 0xae, 0x33, 0xf0, 0x6c, 0x36, 0x63, 0x3f, 0x44, 0xa1, 0xe5, 0x79,
	0x42, 0x12, 0x84, 0x71, 0x65, 0x10, 0x33, 0x2b, 0x01, 0x61, 0x90, 0xd1, 0x92, 0x99, 0x2d, 0x40,
	0xf8, 0xa4, 0xc4, 0xfc, 0xd6, 0x0d, 0x66, 0xdc, 0x78, 0x2c, 0xce, 0xca, 0x48, 0xf3, 0x5f, 0x5b,
	0x50, 0xfb, 0xbf, 0xd3, 0x52, 0x4c, 0x40, 0xf5, 0x5e, 0x02, 0x56, 0x29, 0xab, 0x15, 0x53, 0xf6,
	0xbf, 0xa5, 0xe5, 0x00, 0x1a, 0x33, 0x11, 0x3c, 0x95, 0x14, 0x45, 0x95, 0xd2, 0xb5, 0x75, 0x2f,
	0x5d, 0x6d, 0xa8, 0x26, 0xfc, 0x7b, 0x11, 0xfd, 0x4d, 0xc5, 0x8b, 0xbe, 0x3a, 0xfc, 0x7b, 0x8a,
	0x42, 0xa8, 0xe7, 0x3a, 0x88, 0xd3, 0x89, 0xcf, 0x96, 0x2a, 0x07, 0x2b, 0x9a, 0x9c, 0x01, 0x59,
	0x84, 0x31, 0x67, 0xfe, 0x05, 0x4f, 0x12, 0x76, 0xcb, 0x3b, 0xab, 0xf8, 0xd7, 0xe9, 0x06, 0x8e,
	0x2c, 0x93, 0x0e, 0x8f, 0xd3, 0xe0, 0x26, 0xf0, 0x58, 0xca, 0x45, 0x1a, 0xea, 0xb4, 0x0c, 0x12,
	0x13, 0x1e, 0x07, 0x7e, 0x87, 0xc5, 0xfe, 0x60, 0x31, 0xbb, 0xe6, 0xb1, 0xc8, 0x46, 0x93, 0x96,
	0xb0, 0xf5, 0x82, 0x7b, 0xf2, 0x79, 0x05, 0xb7, 0xb3, 0xb1, 0xe0, 0x8e, 0xa1, 0x79, 0x13, 0xc4,
	0x49, 0x2a, 0x82, 0xf5, 0x54, 0x3e, 0xb1, 0x2b, 0x00, 0x23, 0x30, 0x65, 0x8a, 0xa9, 0xcb, 0x48,
	0x66, 0x34, 0x36, 0x46, 0x6f, 0x11, 0xc7, 0x3c, 0xf4, 0x96, 0x3d, 0xdf, 0xd8, 0x95, 0x8d, 0x31,
	0x47, 0x8a, 0x45, 0x45, 0x4a, 0x45, 0x85, 0x1e, 0xa0, 0x96, 0x7e, 0x74, 0x1b, 0x84, 0x82, 0xff,
	0x4c, 0xc6, 0xa2, 0x04, 0x62, 0x85, 0xcc, 0xa2, 0x90, 0x2f, 0x8d, 0x3d, 0x59, 0x21, 0x82, 0xc0,
	0x62, 0xbe, 0x89, 0x39, 0xff, 0x81, 0x5f, 0x08, 0xde, 0xbe, 0x2c, 0xe6, 0x02, 0x84, 0x76, 0xcd,
	0xa3, 0x4f, 0x3c, 0x76, 0xbc, 0x28, 0xe6, 0xc6, 0x81, 0xb4, 0x2b, 0x47, 0x36, 0x5f, 0xb1, 0xe7,
	0x0f, 0x5d, 0xb1, 0xdf, 0xc0, 0xe3, 0x20, 0x4c, 0x79, 0xcc, 0x93, 0xb4, 0x1f, 0x24, 0xa9, 0x61,
	0x9c, 0x54, 0x4f, 0x5b, 0xe7, 0x87, 0xa5, 0xc2, 0xc1, 0xa2, 0xe9, 0x29, 0x21, 0x5a, 0x12, 0x5f,
	0xbf, 0xa1, 0x87, 0x9f, 0x71, 0x43, 0x8f, 0xd6, 0x6f, 0x68, 0x1b, 0xf4, 0x09, 0x4b, 0xba, 0x31,
	0xfb, 0xc4, 0xa6, 0x99, 0xaa, 0x17, 0x22, 0xa1, 0x6b, 0x38, 0x16, 0xd1, 0x0a, 0x1b, 0x7d, 0xf2,
	0x8d, 0x63, 0x21, 0x57, 0xc2, 0xcc, 0x73, 0x78, 0x5c, 0xb4, 0x5a, 0x3d, 0xca, 0x5a, 0xf6, 0x28,
	0x63, 0x47, 0x2c, 0x5c, 0x69, 0xb1, 0x36, 0xff, 0x51, 0x81, 0x16, 0x6e, 0x52, 0x75, 0xbd, 0xb6,
	0xe7, 0x08, 0xb6, 0x13, 0x1e, 0xfa, 0xe2, 0x91, 0x50, 0x4f, 0x41, 0x46, 0x8b, 0x8e, 0x15, 0xa4,
	0x53, 0xbe, 0xea, 0xd5, 0x48, 0x88, 0x1d, 0x8b, 0x6b, 0x57, 0x30, 0xd4, 0x0b, 0x9d, 0xd1, 0x62,
	0xcc, 0x91, 0xcd, 0x47, 0xbc, 0x05, 0x38, 0xe6, 0x48, 0x92, 0x98, 0x50, 0x0d, 0xd9, 0x9d, 0xb8,
	0xf3, 0xad, 0x73, 0xbd, 0x94, 0x89, 0x01, 0xbb, 0xa3, 0xc8, 0x24, 0xaf, 0x55, 0x93, 0xda, 0x7a,
	0xa0, 0x0f, 0x16, 0xfc, 0x28, 0x34, 0xab, 0x03, 0x68, 0x04, 0x09, 0xe5, 0xcc, 0x57, 0xaf, 0xb3,
	0xa2, 0x44, 0xa9, 0xc7, 0x9c, 0xa5, 0x5c, 0x54, 0x6b, 0x53, 0x95, 0xfa, 0x0a, 0x21, 0xa7, 0x50,
	0x9b, 0x46, 0xb7, 0x91, 0xb8, 0xfe, 0x0f, 0x3d, 0x5a, 0x42, 0xc2, 0x74, 0xe0, 0xf9, 0x78, 0x3e,
	0x8d, 0x98, 0x8f, 0xbc, 0xaf, 0x5f, 0xbf, 0x0d, 0xa6, 0x3c, 0x9b, 0xce, 0xb2, 0x90, 0x6b, 0x79,
	0xc8, 0xb1, 0x7c, 0xae, 0x85, 0x60, 0x47, 0x85, 0x42, 0xc6, 0xb5, 0x0c, 0x9a, 0x77, 0xa0, 0x4b,
	0xa5, 0x52, 0x5d, 0x82, 0x93, 0xc9, 0x26, 0x6d, 0xab, 0xb1, 0xa1, 0x52, 0x1c, 0x1b, 0x08, 0xd4,
	0xe6, 0x2c, 0x9d, 0xa8, 0xcc, 0x88, 0xb5, 0x18, 0x7e, 0xfc, 0x5f, 0xa9, 0x9c, 0xe0, 0x52, 0xcc,
	0x96, 0x13, 0xf6, 0x95, 0x9a, 0x9d, 0xc4, 0xda, 0xfc, 0xb7, 0x06, 0xcf, 0xe4, 0xc1, 0x99, 0x93,
	0xf2, 0xec, 0xcf, 0x28, 0xa6, 0x07, 0x86, 0xb7, 0xcc, 0x96, 0x5a, 0xd9, 0x16, 0x9c, 0x20, 0xea,
	0xf9, 0x04, 0xa1, 0xac, 0x6b, 0xac, 0x5b, 0xb7, 0xa5, 0x26, 0xdf, 0x09, 0xfb, 0x2a, 0x1f, 0xa9,
	0xb6, 0x37, 0x8f, 0x54, 0xcd, 0xd2, 0x48, 0x45, 0xa0, 0x36, 0xc3, 0xe4, 0xca, 0x0e, 0x2a, 0xd6,
	0xe6, 0x3f, 0x2b, 0xb0, 0x65, 0xf9, 0x7e, 0xcc, 0x93, 0x04, 0xdf, 0x49, 0x26, 0x97, 0xbd, 0xcc,
	0xb5, 0x1c, 0x90, 0x1d, 0xc7, 0xe3, 0xc1, 0x1d, 0x8f, 0xb3, 0xd2, 0xcf, 0xe8, 0x42, 0x97, 0xaa,
	0x96, 0xba, 0x14, 0xbe, 0x53, 0x71, 0x74, 0x17, 0x84, 0x1e, 0xef, 0xf9, 0xea, 0xbb, 0xa3, 0x80,
	0xe0, 0x35, 0xce, 0xa8, 0x01, 0x46, 0x4f, 0x06, 0xa0, 0x84, 0xa1, 0x6e, 0x2f, 0x48, 0xf1, 0xfd,
	0x95, 0xa3, 0xab, 0xa2, 0xd0, 0x1e, 0x5c, 0x0d, 0x0a, 0x1d, 0x30, 0xa3, 0xf1, 0x5c, 0x3f, 0x48,
	0xd2, 0x38, 0xf0, 0x70, 0xaa, 0x96, 0xc1, 0x29, 0x20, 0x78, 0x6e, 0x46, 0x89, 0xfd, 0xf2, 0x6b,
	0xa2, 0x84, 0xe1, 0xb9, 0x49, 0x1a, 0x73, 0x9e, 0x4d, 0x1c, 0x8a, 0xc2, 0x28, 0x05, 0x89, 0x1a,
	0x8e, 0x55, 0x87, 0xcb, 0x81, 0xf6, 0xdf, 0x34, 0xd8, 0xdf, 0xf8, 0x3d, 0x47, 0x8e, 0xc1, 0x78,
	0x67, 0x5b, 0x5d, 0x9b, 0x5e, 0x51, 0xfb, 0x0f, 0x63, 0xdb, 0x71, 0xaf, 0xdc, 0xcb, 0x91, 0x7d,
	0x35, 0x18, 0x0e, 0x6c, 0xfd, 0x11, 0xf9, 0x02, 0x5e, 0x6c, 0xe2, 0x2a, 0x42, 0xd7, 0xc8, 0x4b,
	0x38, 0xda, 0xbc, 0xdd, 0xed, 0xbd, 0xbd, 0xd4, 0x2b, 0xe4, 0x04, 0x8e, 0x37, 0x2b, 0x70, 0x46,
	0xc3, 0x81, 0x63, 0xeb, 0xd5, 0x87, 0x34, 0xbc, 0xb3, 0x06, 0xdd, 0xbe, 0xad, 0xd7, 0xda, 0x4b,
	0x20, 0xeb, 0x1f, 0x72, 0xc4, 0x80, 0x3d, 0xb5, 0x6b, 0x44, 0x87, 0xee, 0xb0, 0x33, 0xec, 0x67,
	0x26, 0x1f, 0x00, 0xb9, 0xcf, 0x19, 0xbd, 0xd1, 0xb5, 0x4d, 0x3b, 0x7e, 0xef, 0x0c, 0x07, 0x7a,
	0x85, 0x3c, 0x87, 0x67, 0xf7, 0x39, 0xdf, 0x5e, 0xf4, 0xf5, 0x6a, 0xfb, 0xb7, 0xf0, 0xf4, 0xde,
	0x97, 0x20, 0xd9, 0x87, 0x5d, 0x25, 0xdb, 0xa1, 0x97, 0x23, 0x37, 0x3b, 0x74, 0x0f, 0xf4, 0x12,
	0x4c, 0x1d, 0x4b, 0xd7, 0xda, 0x7f, 0x84, 0x67, 0x1b, 0x26, 0x7f, 0x72, 0x04, 0x07, 0xa3, 0x5e,
	0xc7, 0x1d, 0x53, 0xfb, 0xaa, 0x6b, 0xb9, 0x56, 0x29, 0xe0, 0x87, 0xb0, 0xbf, 0xce, 0x1b, 0xd3,
	0xbe, 0xae, 0x61, 0xa6, 0xd6, 0x59, 0x6f, 0x2c, 0xc7, 0xfe, 0xfa, 0xb5, 0x5e, 0x69, 0xff, 0xa8,
	0x41, 0xab, 0xf0, 0x0d, 0x40, 0x08, 0xec, 0xf4, 0x7b, 0x83, 0xf7, 0x25, 0xe5, 0xbb, 0xf0, 0x24,
	0xc7, 0x3e, 0xda, 0x18, 0x95, 0x3d, 0xd0, 0x73, 0x68, 0x3c, 0xea, 0x5a, 0xae, 0xad, 0x57, 0xd0,
	0xc2, 0x02, 0xea, 0xd8, 0xf4, 0xea, 0xc2, 0x76, 0x1c, 0xeb, 0x77, 0x98, 0xaf, 0x43, 0xd8, 0xcf,
	0x79, 0xc3, 0xb1, 0xeb, 0xf4, 0xba, 0x52, 0x59, 0x0d, 0x83, 0x93, 0xb3, 0x2c, 0xea, 0xf6, 0x3a,
	0x7d, 0x5b, 0xaf, 0xa3, 0xe1, 0x39, 0xdc, 0x19, 0x8e, 0x47, 0xc3, 0xc1, 0xd5, 0xf0, 0x83, 0x4d,
	0xbb, 0x63, 0x5b, 0x6f, 0xb4, 0xdf, 0x4a, 0xbb, 0xd5, 0xf8, 0x87, 0x36, 0x8a, 0x03, 0x1d, 0xfb,
	0xdb, 0xcc, 0x6c, 0x1d, 0x1e, 0xaf, 0xa0, 0x0b, 0x6b, 0xa0, 0x6b, 0xe8, 0xdc, 0x0a, 0xf9, 0x38,
	0x44, 0xac, 0xd2, 0x5e, 0xca, 0x60, 0xdf, 0x6b, 0x2f, 0x78, 0x78, 0xd1, 0x01, 0x69, 0x84, 0x73,
	0xe9, 0xb8, 0xf6, 0x85, 0xfe, 0x88, 0x7c, 0x09, 0xe6, 0x3a, 0x57, 0xd9, 0x76, 0x45, 0xed, 0x8b,
	0xde, 0xa0, 0x6b, 0x53, 0x19, 0xfb, 0x75, 0x39, 0xe9, 0x8a, 0x5e, 0x69, 0x7f, 0x90, 0x2e, 0x8c,
	0xd8, 0x72, 0x86, 0x5d, 0x72, 0x1f, 0x76, 0x47, 0xd6, 0xe5, 0x85, 0x3d, 0x70, 0xb3, 0x1c, 0x0d,
	0xde, 0xeb, 0x8f, 0xb0, 0xcc, 0x4a, 0xb0, 0xd5, 0xef, 0x8d, 0xac, 0x4b, 0x5d, 0x5b, 0x63, 0x7c,
	0xb4, 0x3b, 0xef, 0x2c, 0x57, 0xaf, 0xb4, 0xff, 0xaa, 0xc9, 0x02, 0x14, 0x43, 0x91, 0x23, 0x7e,
	0xab, 0x60, 0x19, 0x0f, 0x29, 0x16, 0x9a, 0xe3, 0x5a, 0xee, 0xd8, 0xc1, 0xec, 0xf4, 0x6d, 0xc7,
	0xd1, 0x1f, 0x91, 0x17, 0xf0, 0xbc, 0xc4, 0x91, 0xc4, 0x47, 0xab, 0x87, 0xf7, 0x74, 0x33, 0xd3,
	0x19, 0x53, 0x4c, 0xf7, 0x4b, 0x38, 0xda, 0xc8, 0xec, 0x74, 0x50, 0x73, 0x95, 0xfc, 0x0c, 0x0e,
	0x37, 0xf0, 0xdf, 0x5a, 0xbd, 0xbe, 0xdd, 0xd5, 0x6b, 0xd7, 0x0d, 0xf1, 0x53, 0xe5, 0x97, 0xff,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0x32, 0x0a, 0x16, 0x9d, 0x78, 0x12, 0x00, 0x00,
}
